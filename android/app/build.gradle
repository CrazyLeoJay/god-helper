plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystorePropertiesFile = rootProject.file("dev2.properties")
def devVariable = new Properties()

// 主要是应用于github
// 环境变量优先
def keystore_file = System.getenv("KEYSTORE_FILE") ?: "debug.keystore.jks"
def jks_password = System.getenv("JKS_PASSWORD") ?: "god_helper_debug"
def jks_alias = System.getenv("KEYSTORE_ALIAS") ?: "debug"

if (keystorePropertiesFile.exists()) {
    // 即使有文件，也是已环境变量为优先
    println("有配置文件 use config")
    devVariable.load(new FileInputStream(keystorePropertiesFile))
} else {
    println("没有配置文件 no config")
    devVariable['KEYSTORE_FILE'] = keystore_file
    devVariable['JKS_PASSWORD'] = jks_password
    devVariable['KEYSTORE_ALIAS'] = jks_alias
}

println("storeFile: ${rootProject.file(keystore_file)}")
println("keyAlias: ${jks_alias}")

android {
    namespace = "site.leojay.god_helper"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "site.leojay.god_helper"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig = signingConfigs.debug
        }
    }


    signingConfigs {
        // 如果配置文件存在，以配置文件为准
        dev {
            storeFile rootProject.file(devVariable['KEYSTORE_FILE'])
            storePassword devVariable['JKS_PASSWORD']
            keyAlias devVariable['KEYSTORE_ALIAS']
            keyPassword devVariable['JKS_PASSWORD']
        }

        // 以常量为准
        github_actions {
            storeFile rootProject.file(keystore_file)
            storePassword jks_password
            keyAlias jks_alias
            keyPassword jks_password
        }
    }

    /// 设置不同变体
    flavorDimensions "path"

    productFlavors {
        dev {
            dimension "path"
            signingConfig = signingConfigs.dev
        }

        local {
            dimension "path"
            signingConfig = signingConfigs.debug
        }

        github_actions {
            dimension "path"
            signingConfig signingConfigs.github_actions
        }
    }

}

flutter {
    source = "../.."
}
